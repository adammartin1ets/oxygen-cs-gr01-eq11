name: CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install -r requirements.txt
      - name: Run unit tests
        run: python -m unittest discover -s test
        
      - name: Stop if tests fail
        if: ${{ failure() }}
        run: exit 1
  
  linting:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint
    - name: Analysing the code with pylint
      run: |
        pylint --fail-under=7 $(git ls-files '*.py')
        
        
  build_and_push_docker:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and export to Docker
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: adammartin1ets/oxygen-cs-gr01-eq11:latest
        
  deploy_to_kubernetes:
    needs: build_and_push_docker
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Install kubectl and other required tools for Kubernetes deployment
    - name: Set up Kubernetes CLI
      run: |
        sudo apt-get update && sudo apt-get install -y apt-transport-https gnupg2
        curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
        echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
        sudo apt-get update
        sudo apt-get install -y kubectl

    # Authenticate with your Kubernetes cluster using the kubeconfig stored in the secrets
    - name: Authenticate with Kubernetes cluster
      run: |
        echo "${{ secrets.KUBE_CONFIG_DATA }}" -d > kubeconfig.yaml
        kubectl --kubeconfig=kubeconfig.yaml version

    # Update the Kubernetes deployment with the latest Docker image
    - name: Deploy to Kubernetes cluster
      run: |
        kubectl --kubeconfig=kubeconfig.yaml set image deployment/images deploy=adammartin1ets/oxygen-cs-gr01-eq11:${{ github.run_id }}
      
    
